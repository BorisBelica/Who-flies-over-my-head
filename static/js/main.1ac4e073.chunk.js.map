{"version":3,"sources":["Components/Location.jsx","Components/FlyCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Location","props","useState","latitude","setLatitude","longitude","setLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","toFixed","handleLongitude","handleLatitude","className","style","fontSize","FlyCard","flyData","states","map","flight","index","Card","width","Body","Title","ListGroup","ListGroupItem","Button","variant","href","target","App","setflyData","loading","setLoading","maxLatitude","setMaxLatitude","minLatitude","setMinLatitude","maxLongitude","setMaxLongitude","minLongitude","setMinLongitude","undefined","axios","request","method","url","then","response","data","catch","error","console","Spinner","animation","role","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTA8CeA,MApCf,SAAkBC,GAAQ,IAAD,EAESC,qBAFT,mBAEhBC,EAFgB,KAENC,EAFM,OAGWF,qBAHX,mBAGhBG,EAHgB,KAGLC,EAHK,KAkBvB,OAZAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAASC,GAGhDP,EAAYO,EAASC,OAAOT,SAASU,QAAQ,IAC7CP,EAAaK,EAASC,OAAOP,UAAUQ,QAAQ,IAE/CZ,EAAMa,gBAAgBH,EAASC,OAAOP,WACtCJ,EAAMc,eAAeJ,EAASC,OAAOT,eAEtC,CAACF,IAGF,sBAAKe,UAAU,mBAAf,UACE,cAAC,IAAD,CAA6BC,MAAO,CAAEC,SAAU,MAChD,8CACA,sBAAKF,UAAU,eAAf,UACE,gCACE,mBAAGA,UAAU,UAAb,SAAyBb,IACzB,mBAAGa,UAAU,eAAb,uCAEF,gCACE,mBAAGA,UAAU,UAAb,SAAyBX,IACzB,mBAAGW,UAAU,eAAb,oD,4CCmCKG,MA/Df,SAAiBlB,GAGb,OAA4B,OAAzBA,EAAMmB,QAAQC,OAET,qBAAKL,UAAU,YAAf,SAEQf,EAAMmB,QAAQC,OAAOC,KAAI,SAACC,EAAQC,GAElC,OACI,cAACC,EAAA,EAAD,CAAuBR,MAAO,CAAES,MAAO,SAAvC,SACA,+BACA,cAACD,EAAA,EAAKE,KAAN,CAAWX,UAAU,SAArB,SACI,cAACS,EAAA,EAAKG,MAAN,UACA,gCACI,mBAAGZ,UAAU,gBAAb,gCACA,oBAAIA,UAAU,aAAd,SAA4BO,EAAO,YAI3C,eAACM,EAAA,EAAD,CAAWb,UAAU,mBAArB,UACI,cAACc,EAAA,EAAD,UACA,4CAA+BP,EAAO,KAA7B,IAAMC,KAEf,cAACM,EAAA,EAAD,UACA,gEAAyCP,EAAO,KAAvC,IAAMC,KAEf,cAACM,EAAA,EAAD,UACA,8DAAyCP,EAAO,KAAvC,IAAMC,KAEf,cAACM,EAAA,EAAD,UACA,0DAAkD,IAAVP,EAAO,IAAQV,QAAQ,KAAtD,IAAMW,KAEf,cAACM,EAAA,EAAD,UACA,0DAA6CP,EAAO,MAA3C,IAAMC,QAGf,cAACO,EAAA,EAAD,CACIf,UAAU,cACVgB,QAAQ,YACRC,KAAI,8CAAyCV,EAAO,IACpDW,OAAO,SAJX,oBA1BJ,UAAYV,KADZ,UAAcA,SA+C1B,qBAAKR,UAAU,aAAf,SACI,+F,MCoFDmB,MAjIf,WAAe,MAGgBjC,mBAAS,IAHzB,mBAGPkB,EAHO,KAGEgB,EAHF,OAMgBlC,oBAAS,GANzB,mBAMPmC,EANO,KAMEC,EANF,OASwBpC,qBATxB,mBASPqC,EATO,KASMC,EATN,OAUwBtC,qBAVxB,mBAUPuC,EAVO,KAUMC,EAVN,OAW0BxC,qBAX1B,mBAWPyC,EAXO,KAWOC,EAXP,OAY0B1C,qBAZ1B,mBAYP2C,EAZO,KAYOC,EAZP,KAqEb,OA1CAvC,qBAAW,gBAiBewC,IAAjBJ,QAAiDI,IAAjBF,QAAgDE,IAAhBR,QAA+CQ,IAAhBN,GAClGO,IAAMC,QAjBQ,CACdC,OAAQ,MAGRC,IAAI,uGAcHC,MAAK,SAAUC,GACdjB,EAAWiB,EAASC,MAIhBD,EAASC,KAAKjC,OAEhBiB,GAAW,MAOdiB,OAAM,SAAUC,GACfC,QAAQD,MAAMA,QAKpB,CAACb,EAAcE,EAAcN,EAAaE,IAI1C,sBAAKzB,UAAU,MAAf,UAEE,yBAAQA,UAAU,aAAlB,UACE,4DACA,8MAIA,cAAC,EAAD,CACKF,gBA/Da,SAACwC,GACvBR,GAAiBQ,EAAO,OAAQzC,QAAQ,IACxC+B,GAAiBU,EAAO,OAAQzC,QAAQ,KA8D/BE,eA5DY,SAACuC,GACtBZ,GAAgBY,EAAO,OAAQzC,QAAQ,IACvC2B,GAAgBc,EAAO,OAAQzC,QAAQ,UA+DrC,+BAIAwB,EACA,cAACqB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAM5C,UAAU,UAAhB,0BAIA,cAAC,EAAD,CAASI,QAASA,MAapB,yBAAQJ,UAAU,aAAlB,UACI,oBAAGA,UAAU,MAAb,uBACI,mBACEiB,KAAK,2BACL4B,IAAI,aACJ3B,OAAO,SAHT,8BAOF,oBAAGlB,UAAU,MAAb,wCACE,mBACEiB,KAAK,+BACL4B,IAAI,aACJ3B,OAAO,SAHT,wCClIC4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ac4e073.chunk.js","sourcesContent":["// imports\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// SASS\r\nimport './Location.scss';\r\n\r\n\r\nimport PersonPinCircleOutlinedIcon from '@material-ui/icons/PersonPinCircleOutlined';\r\n\r\n\r\nfunction Location(props) {\r\n\r\n  const [latitude, setLatitude] = useState()\r\n  const [longitude, setLongitude] = useState()\r\n  \r\n  // first load of page\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(function(position){\r\n      \r\n      // setting longitude and lattitude to state and fix to max 5 numbers after .\r\n      setLatitude(position.coords.latitude.toFixed(5))  \r\n      setLongitude(position.coords.longitude.toFixed(5))\r\n\r\n      props.handleLongitude(position.coords.longitude)\r\n      props.handleLatitude(position.coords.latitude)\r\n    });\r\n  }, [props])\r\n\r\n  return (\r\n    <div className=\"location-section\">\r\n      <PersonPinCircleOutlinedIcon style={{ fontSize: 90 }} />\r\n      <h2>Tvoja poloha</h2>\r\n      <div className=\"location-box\">\r\n        <div>\r\n          <p className=\"postion\">{ latitude }</p>\r\n          <p className=\"postion-text\">severnej šírky</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"postion\">{ longitude }</p>\r\n          <p className=\"postion-text\">východnej dĺžky</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Location;","import React from 'react';\r\n\r\n//BOOTSTRAP-UI\r\nimport { Card, ListGroupItem, ListGroup, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// SASS\r\nimport '../App.scss';\r\nimport '../Components/FlyCard.scss'\r\n\r\n// reciving flyData props\r\nfunction FlyCard(props) {\r\n\r\n    /* IF LOADING COMPLETE AND THERE ARE SOME DATA IN FLYDATA PROP */\r\n    if(props.flyData.states !== null) {\r\n        return (\r\n            <div className=\"card-list\">\r\n                {\r\n                    props.flyData.states.map((flight, index) => {\r\n                    //console.log(index)\r\n                    return(\r\n                        <Card key={`${index}`} style={{ width: '20rem' }}>\r\n                        <ul key={`${index}`}>\r\n                        <Card.Body className=\"flight\">\r\n                            <Card.Title>\r\n                            <div>\r\n                                <p className=\"card-subtitle\">číslo letu</p>\r\n                                <h2 className=\"card-title\">{flight[1]}</h2>\r\n                            </div>\r\n                            </Card.Title>\r\n                        </Card.Body>\r\n                        <ListGroup className=\"list-group-flush\">\r\n                            <ListGroupItem>\r\n                            <li key={'a' + index} >Pôvod: {flight[2]}</li>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                            <li key={'b' + index} >Zemepisná dĺžka: {flight[5]}</li>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                            <li key={'c' + index} >Zemepisná šírka: {flight[6]}</li>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                            <li key={'d' + index} >Rýchlosť km/h: {(flight[9]*3.6).toFixed(2)}</li>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                            <li key={'e' + index} >Klesanie / Stúpanie: {flight[11]}</li>\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                            <Button \r\n                                className=\"card-button\"\r\n                                variant=\"contained\" \r\n                                href={`https://flightaware.com/live/flight/${flight[1]}`} \r\n                                target=\"_blank\" >Viac\r\n                            </Button>\r\n                            \r\n                        </ul>\r\n                        </Card>\r\n                    )\r\n                    }\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /* IF THERE IS NO DATA IN FLYDATA PROPS - NO DATA LOADED */\r\n    else {\r\n        return (\r\n            <div className=\"stats-list\">\r\n                <h2>Žiadne údaje sa nepodarilo načítať!!!</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FlyCard\r\n","// IMPORTS\nimport React from 'react';\nimport axios from 'axios'\nimport { useState, useEffect } from 'react'\n//import { Switch, Route, } from 'react-router-dom';\n\n//BOOTSTRAP-UI\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Spinner from 'react-bootstrap/Spinner';\n\n// Components\nimport Location from './Components/Location'\nimport FlyCard from './Components/FlyCard'\n\n//import Navigation from './Components/Navigation'\n\n// SASS\nimport './App.scss';\nimport './Components/Location.scss';\nimport './Components/Navigation.scss'\nimport './Components/FlyCard.scss'\n\n\n// FUNCTION REACT APP\nfunction App() {\n\n  // STATES\n const [flyData, setflyData] = useState({})\n\n // Are data loaded from API? Are there any data?\n const [loading, setLoading] = useState(true)\n \n // max and min - square of 30 km around you\n const [maxLatitude, setMaxLatitude] = useState()\n const [minLatitude, setMinLatitude] = useState()\n const [maxLongitude, setMaxLongitude] = useState()\n const [minLongitude, setMinLongitude] = useState()\n\n  // GETING POSTION from LOCATION component in data variable\n  // setting max and min longitude => +/- 30 km (0.4102)\n  const handleLongitude = (data) => {\n    setMinLongitude((data - 0.4102).toFixed(5))\n    setMaxLongitude((data + 0.4102).toFixed(5))\n  }\n  const handleLatitude = (data) => {\n    setMinLatitude((data - 0.2744).toFixed(5))\n    setMaxLatitude((data + 0.2744).toFixed(5))\n  }\n  // ------------------------------------------------------ //\n\n  // GETTING DATA FROM API \n  useEffect( () => {\n      const options = {\n        method: 'GET',\n        \n        // CELE SLOVENSKO\n        url: `https://opensky-network.org/api/states/all?lamin=48.0500&lomin=16.8500&lamax=49.4800&lomax=22.2500`,\n\n        // ZIADNE DATA\n        //url: `https://opensky-network.org/api/states/all?lamin=48.0500&lomin=16.8500&lamax=48.0500&lomax=22.2500`,\n\n        // TVOJA POZICIA\n        //url: `https://opensky-network.org/api/states/all?lamin=${minLatitude}&lomin=${minLongitude}&lamax=${maxLatitude}&lomax=${maxLongitude}`,\n\n        // params: {},\n        // headers: {}\n      };\n\n      if ((maxLongitude !== undefined) && (minLongitude !== undefined) && (maxLatitude !== undefined) && (minLatitude !== undefined )) {\n        axios.request(options)\n        .then(function (response) {\n          setflyData(response.data)\n          //console.log('FLYDAT:')\n          //console.log(response.data)\n\n          if (response.data.states !== null) {\n            //console.log('Údaje do STATES načítané!! LOADING NA SET TO FALSE')\n            setLoading(false)\n          }\n          else {\n            //console.log('NIE SU DAJE V STATES! LOADING NA SET TO TRUE')\n            setLoading(false)\n          }\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n\n        //console.log(maxLongitude, minLongitude, maxLatitude, minLatitude)\n      }\n  },[maxLongitude, minLongitude, maxLatitude, minLatitude])\n  \n  // TEMPLATE\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <h1>Kto mi letí nad hlavou?</h1>\n        <p>Sedíš, premýšľaš a zrazu nad tvojou hlavou letí lietadlo. Odkiaľ letí? Kam letí? \n          Odpoveď ti dá táto webová aplikácia</p>\n\n        \n        <Location \n             handleLongitude={handleLongitude}\n             handleLatitude={handleLatitude}\n        />\n        \n      </header>\n\n      <main>\n      \n      { \n      /* LOADING IS TRUE - SPINNER ANIMATION */\n      loading ?\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n\n      /* LOADING ENDS */\n      : <FlyCard flyData={flyData}/> \n      }\n    \n      { /* NEW FEATURE NOT DEVELOPER YET */\n      /*\n      <p>Chceš zobraziť celé Slovensko?</p> \n      <Button className=\"card-button\"href=\"asdasds\" target=\"_blank\">Zobraziť</Button>\n      */\n      }\n\n      </main>\n\n\n      <footer className=\"App-footer\">\n          <p className=\"who\">Created by \n              <a \n                href=\"https://boris-belica.sk/\" \n                rel=\"noreferrer\" \n                target=\"_blank\"> Boris Belica\n              </a>\n            </p>\n\n            <p className=\"who\">Fly informations thank's to \n              <a \n                href=\"https://opensky-network.org/\" \n                rel=\"noreferrer\" \n                target=\"_blank\"> Opensky Network\n              </a>\n            </p>\n       </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}